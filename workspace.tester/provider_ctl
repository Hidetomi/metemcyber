#! /bin/bash

function usage() {
    echo >&2 "Usage: $0 [init|start|stop|kill]"
    exit 255
}

function get_account_list() {
    cat <<EOD | sed -e "s/^  //" | python
  from eth_tester import EthereumTester
  t = EthereumTester()
  alice,bob,carol = tuple(list(t.get_accounts())[0:3])
  assert(t.get_balance(alice) > 0)
  assert(t.get_balance(bob) > 0)
  assert(t.get_balance(carol) > 0)
  print('ALICE_EOA_ADDRESS={}'.format(alice))
  print('ALICE_PRIVATE_KEY={:064x}'.format(1))
  print('BOB_EOA_ADDRESS={}'.format(bob))
  print('BOB_PRIVATE_KEY={:064x}'.format(2))
  print('CAROL_EOA_ADDRESS={}'.format(carol))
  print('CAROL_PRIVATE_KEY={:064x}'.format(3))
EOD
    if [ $? -ne 0 ]; then
        echo >&2 "cannot get account list"
        exit 255;
    fi
}


while getopts 'h' OPT; do
    case ${OPT} in
    h|?) usage;;
    esac
done
shift $((${OPTIND} - 1))

act=$1

function init_tester() {
    : > "${ENV_FILE}"
    get_account_list >> "${ENV_FILE}"
    cat <<EOD | sed -e "s/^ *//" >> "${ENV_FILE}"
    DOCKER_NETWORK=metemcyber-tester
    PROVIDER_HOST=
    PROVIDER_PORT=
    PROVIDER_FROM_LOCAL=
EOD
    echo "== generated account list : ${ENV_FILE}"
    cat "${ENV_FILE}"
    echo "=="
}

function kill_tester() {
    rm -f "${ENV_FILE}"
}

case "${act}" in
    init)
        init_tester
        ;;
    start)
        ;;
    stop)
        ;;
    kill)
        kill_tester
        ;;
    *)
        usage
        ;;
esac
